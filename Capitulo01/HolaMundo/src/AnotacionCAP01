Primitivos
========================================================================
TIPOS ESCALARES
ENTEROS:
    BYTE(1 BYTE): 8 BITS - entre -128 a127, Valor por defecto: 0
    SHORT (2 bytes): 16 BITS -  -32768 a 32767, Valor por defecto: 0
    INT (4 bytes): 32 BITS -  -2147483648 a 2147483647 : -2^32 a 2^32, Clase equivalente: "INTEGER", Valor por defecto: 0
    LONG (8 bytes): 64 BITS -  -2^64 a 2^64, Valor por defecto: 0l
FLOTANTE
    FLOAT 32 BITS: Precision Simple, todos los numero deben tener la letra(f) al final, Valor por defecto: 0.0f
       Muestra valores en forma compacta (notación científica) con mayor precision y mas decimales
       Mostrar por notación científica.
        ===============================
        1.5e4f = e:10 -> (e^4) * 1.5 y corremos 4 ceros a la derecha = 15000.0
        1.5e-10f = e:10 -> (e^10) * 1.5 y corremos 10 ceros a la izquierda por que es negativo = 0.00000000015f
        PARTES: (1.5): mantisa, e: exponente, -10: valor, f: tipo,  0.00000000015f: valor de punto fijo
    DOUBLE 64 BITS : Doble precision, Los numero con punto son double de manera implicita, Valor por defecto: 0.0d
        Cuando un numero tiene decimal siempre es interpretada como "double" por defecto.

CARACTERES:
    Cada carácter ocupa 16bits. Se declara con comillas simples.
    -Basa en el estándar de carácteres UNICODE que también es manejado por nuestro sistema Operativo
    -Interpreta el código UNICODE de varias maneras: char carácter = '\u0040';char decimal = 64;char símbolo = '@';
        Todas ellas imprime arroba(@)
    -char (2 byte): 16 BITS
    -Clase equivalente CHARACTER
    -Valor por defecto "null" o u0000 - código UNICODE
    -Puede contener código UNICODE '\U0021'
    -Podemos colocar el valor decimal de los caracteres UNICODE
BOOLEAN:
    Tipo mas simple de un solo bit
    Valor por defecto "false"

Ventanas de Dialogo
===========================================================================
Retorna valores string
String str = JOptionPane.showInputDialog(Componente padre, "Mensaje");
int numero = Integer.parseInt(str);
Muestra mensaje
JOptionPane.showMessageDialog(null, mensaje)

Sistemas Numéricos
============================================================================
Conversión de decimales a numéricos
-Integer.toBinaryString("decimal") : Convierto numero decimal a string con representación binaria
-Integer.toOctalString("decimal") :  Convierto numero decimal a string con representación octal
-Integer.toHexString("decimal") :  Convierto numero decimal a string con representación hexadecimal
--El numero binario se representa anteponiendo el "0b", el numero octal se representa anteponiendo el "0",
el numero hexadecimal se representa anteponiendo el "0x".

Scanner: clase de Java que escanea a la linea terminal para obtener parametros de entrada.
System.in: Representa la entrada de datos por el terminal.
nextLine: Obtiene la linea actual que el usuario ingresa del tipo String, deja esperando hasta que el usuario ingrese algun valor
nextInt, nextBool, nextShort : obtienen los datos de la linea de comando y las convierten directamente a sus tipos de valores declarados.
Exception: Todas las clases de extensiones extienden de "Exception"

1. Para convertir de un de un string a un primitivo siempre usar lo siguiente.
    wraper(x).parse(cadena): (x = Wraper del primitivo) de String a primitivo
    wraper(x).toString(valor primitivo): (x = Wraper del primitivo) de Primitivo a string
    String.valueOf(): recibe primitivos que convierte a string
2. Convertir de primitivo a primitivo
    (CAST): Forzar la conversion
    int i = 10000;
    short x = (short)i; No es posible por que short es mas pequeño que int y habra perdida de datos.
            aun haci puede ser forzado mediante (casting)
    long l = i; Es posible convertir ya que long es mas amplio que int y no hay perdida de datos.
    En primitivos podemos hacer CAST solo a tipos numérico incluyendo a los Reales y CHAR